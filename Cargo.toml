[package]
name = "lilos"
version = "0.2.0"
authors = ["Cliff L. Biffle <code@cliffle.com>"]
edition = "2018"
license = "MPL-2.0"
description = "A tiny embedded OS based around Futures and async."
repository = "https://github.com/cbiffle/lilos/"
keywords = ["async", "embedded", "realtime", "os"]
categories = ["embedded"]
readme = "README.mkdn"

[package.metadata.docs.rs]
default-target = "thumbv7em-none-eabihf"

[features]
default = ["mutex", "spsc"] # may not be on by default in a later version
mutex = []
spsc = []

[dependencies]
# We need inline-asm here to get at APSR.
cortex-m = { version = "0.7.2", features = ["inline-asm"] }
cortex-m-rt = "0.6.13"
futures = { version = "0.3.14", default-features = false, features = ["async-await"] }
pin-utils = "0.1.0"

# Mostly for examples
[dev-dependencies]
panic-halt = "0.2.0"

[dev-dependencies.stm32f4]
default-features = false
features = ["rt", "stm32f407"]
version = "0.13.0"

[lib]
test = false
bench = false

[profile.release]
codegen-units = 1 # better optimizations
debug = true # symbols are nice and they don't increase the size on Flash
lto = true # better optimizations
opt-level = "z"

[[example]]
name = "uart_echo"
required-features = ["spsc"]
