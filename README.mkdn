# `lilos`: A minimal async RTOS

This is a wee RTOS written to support the `async` style of programming in Rust.

## Repo layout

This is a Cargo workspace, so the interesting bits are mostly in subdirectories:

- `os` contains the operating system crate. The [README in that
  crate](https://github.com/cbiffle/lilos/blob/main/os/README.mkdn) gives more
  background.
- `testsuite` contains a test suite for the operating system, which can run on
  an STM32F407.
- `examples/ARCH/NAME` contains the example named NAME for ARCH.

## Building

You will need a Rust toolchain installed through `rustup`, because we use a
`rustup`-style `rust-toolchain` file to pin the toolchain version to ensure that
you get the right results.

1. Ensure that the embedded target is installed: `rustup target add
   thumbv7em-non-eabihf`
2. Build: `cargo build` (or to build just the OS, and not the examples, add `-p
   lilos`)
3. To try an example on a microcontroller eval board, see the README in the
   individual example.

## Contact and License

If you have questions, or you use it for something, I'd love to find out! Send
me an email.

All the code in this repo is MPL-2 licensed.
